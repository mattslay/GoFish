*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="gofishui.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
DEFINE CLASS gf_filtersinglecheckboxcontainer AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chkApplyFilter" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: clear		&& Clears the contents of a ComboBox or ListBox control.
		*m: cleardecoration
		*m: decorate
		*m: ldecorated_assign
		*m: setallcheckboxes
		*m: shouldbedecorated
		*p: cfilter
		*p: ldecorated
		*p: ncheckboxcount
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderColor = 150,150,150
		cfilter = 
		Height = 25
		ldecorated = .F.
		Name = "gf_filtersinglecheckboxcontainer"
		ncheckboxcount = 0
		Width = 218
		_memberdata = <VFPData>
			<memberdata name="setallcheckboxes" display="SetAllCheckBoxes"/>
			<memberdata name="cfilter" display="cFilter"/>
			<memberdata name="ncheckboxcount" display="nCheckBoxCount"/>
			<memberdata name="bordercolor" display="BorderColor"/>
			<memberdata name="clear" display="Clear"/>
			<memberdata name="decorate" display="Decorate"/>
			<memberdata name="cleardecoration" display="ClearDecoration"/>
			<memberdata name="ldecorated" display="lDecorated"/>
			<memberdata name="ldecorated_assign" display="lDecorated_Assign"/>
			<memberdata name="shouldbedecorated" display="ShouldBeDecorated"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'chkApplyFilter' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .T., ;
		Caption = "Caption", ;
		ControlSource = "", ;
		FontBold = .F., ;
		FontItalic = .F., ;
		FontName = "Arial", ;
		FontSize = 9, ;
		Height = 17, ;
		Left = 10, ;
		Name = "chkApplyFilter", ;
		Picture = ..\images\, ;
		TabIndex = 7, ;
		Top = 4, ;
		Width = 61
		*< END OBJECT: BaseClass="checkbox" />
	
	PROCEDURE clear		&& Clears the contents of a ComboBox or ListBox control.
	ENDPROC

	PROCEDURE cleardecoration
		This.lDecorated = .F.
		
	ENDPROC

	PROCEDURE decorate
		This.lDecorated = .T.
	ENDPROC

	PROCEDURE ldecorated_assign
		Lparameters tlDecorated
		This.lDecorated = m.tlDecorated
		
		If m.tlDecorated
			This.BorderWidth	 = 2
			This.BorderColor	 = Rgb(255, 0, 0)
		Else
			This.BorderWidth	 = 1
			This.BorderColor	 = Rgb(175, 175, 175)
		Endif
		
		If Pemstatus(Thisform, 'DecoratePage', 5) And This.Parent.BaseClass = 'Page'
			Thisform.DecoratePage(This.Parent)
		Endif
	ENDPROC

	PROCEDURE Refresh
		This.ClearDecoration()
		
		If This.ShouldBeDecorated()
			This.Decorate()
		Endif
		
	ENDPROC

	PROCEDURE setallcheckboxes
	ENDPROC

	PROCEDURE shouldbedecorated
		Local loControl
		For Each m.loControl In This.Controls
			If Upper(m.loControl.BaseClass) = 'CHECKBOX' And Not Empty(m.loControl.Value)&& and loControl.Enabled
				Return .T.
				Exit
			Endif
		Endfor
		Return .F.
	ENDPROC

	PROCEDURE chkApplyFilter.Valid
		This.Parent.Refresh()
	ENDPROC

ENDDEFINE
