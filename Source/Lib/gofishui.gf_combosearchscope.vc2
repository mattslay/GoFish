*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="gofishui.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
DEFINE CLASS gf_combosearchscope AS combobox 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "gofish.h"
	*<DefinedPropArrayMethod>
		*m: addrow
		*m: loadprojects		&& Adds a list item for each project in the passed collection of Projects.
		*m: loadrows
		*m: opentable
		*m: savesearchscope
		*m: updateimageicon
		*p: ctable
		*p: nexpressionstostore
		*p: nmaxmru
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		Anchor = 10
		ctable = 
		Height = 24
		Name = "gf_combosearchscope"
		nexpressionstostore = 15
		nmaxmru = 7
		Width = 365
		_memberdata = <VFPData>
			<memberdata name="opentable" display="OpenTable"/>
			<memberdata name="nexpressionstostore" display="nExpressionsToStore"/>
			<memberdata name="savesearchscope" display="SaveSearchScope"/>
			<memberdata name="loadrows" display="LoadRows"/>
			<memberdata name="loadprojects" display="LoadProjects"/>
			<memberdata name="ctable" display="cTable"/>
			<memberdata name="addrow" display="AddRow"/>
			<memberdata name="updateimageicon" display="UpdateImageIcon"/>
			<memberdata name="nmaxmru" display="nMaxMRU"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE addrow
		Lparameters tcScope
		
		Local lItemExists, lcItem
		
		If Right(tcScope, 1) == ' '
			lcItem = Alltrim(Lower(tcScope))
		Else
			lcItem = tcScope
		EndIf
		
		lcItem = Rtrim(lcItem, '\')
		
		lItemExists = .F. && assume the value isn't in the list.
		
		For i = 1 To This.ListCount
			If Alltrim(Lower(This.List(i))) == lcItem
				lItemExists = .T.
				Exit
			Endif
		Endfor
		
		If !lItemExists
			This.AddItem(lcItem)
		Endif
	ENDPROC

	PROCEDURE GotFocus
		This.Tag = This.value
	ENDPROC

	PROCEDURE Init
		*SF 20221018 -> local storage
		*This.cTable = Addbs(Home(7)) + 'GF_Search_Scope_History.dbf'
		This.cTable = Thisform.cCR_StoreLocal + 'GF_Search_Scope_History.dbf'
		*/SF 20221018 -> local storage
		
		This.LoadRows()
		 
	ENDPROC

	PROCEDURE InteractiveChange
		This.UpdateImageIcon()
	ENDPROC

	PROCEDURE loadprojects		&& Adds a list item for each project in the passed collection of Projects.
		Lparameters toProjects
		
		Local lcSearchScopeTable, lnSelect, loProject
		
		lnSelect = Select()
		
		This.OpenTable()
		
		*-- Be sure that each of the recent projects are in the Scope History table ----------
		For Each loProject in toProjects
			Locate for Alltrim(Lower(scope)) == Alltrim(Lower(loProject))
			If !Found()
				Append Blank
				Replace scope with Alltrim(Lower(loProject))
				Replace item with Recno()
			Endif
		EndFor
		
		Select (lnSelect) 
	ENDPROC

	PROCEDURE loadrows
		Local lItemExists, lcItem, lnSelect, lcScope, lnCounter
		
		lnCounter = 0
		
		lnSelect = Select()
		
		This.OpenTable()
		
		*-- Rebuild the combobox values -------------------------------
		This.RowSource = '' && Clear out rows
		
		This.AddRow('\ -- Projects -------------------------')
		If Type('_vfp.ActiveProject') = 'O'
			This.AddRow('<< Active Project >>')
		Endif
		
		*-- Add Projects --------------------------
		Scan for Upper(JustExt(scope)) == 'PJX'
			This.AddRow(scope)
			lnCounter = lnCounter + 1
			If lnCounter = This.nMaxMRU
				Exit
			Endif
		Endscan
		
		This.AddRow('')
		This.AddRow('\ -- Folders ----------------------------')
		This.AddRow('<< Current Dir >>')
		
		*-- Add Folders
		Scan for Upper(JustExt(scope)) <> 'PJX'
			lcScope = scope
			If Left(lcScope,2) = '\\'
			 lcScope = '\' + '\' + lcScope
			Endif
		
			This.AddRow(lcScope)
		
			lnCounter = lnCounter + 1
		
			If lnCounter = 2 * This.nMaxMRU
				Exit
			Endif
		
		Endscan
		
		Use
		Thisform.SaveDBC_Close()
		
		This.Refresh()
		
		Select (lnSelect)    
	ENDPROC

	PROCEDURE opentable
		Local lcTable
		
		lcTable = This.cTable
		
		If !Used(Juststem(m.lcTable)) Then
			Thisform.SaveDBC_Open()
		
			If !File(lcTable)
		*		Create Table (lcTable) Free (scope C(254), Item I)
				Create Table (lcTable) (scope C(254), Item I)
				Index On Item Tag _Item
				Append Blank
				Use
			Endif
		
			If !Used(Juststem(lcTable))
				Select 0
				Try
						Use (lcTable) Exclusive
						Pack
						Use
		
					Catch
				Endtry
				Use (lcTable) Order _Item
			Else
				Select (Juststem(lcTable))
			Endif
		
		*-- Clean out any junk or missing scopes---
			lnItem = 0
			Scan
				lcScope = Alltrim(scope)
				If (!Directory(lcScope, 1) And !File(lcScope) Or Empty(lcScope));
						AND !Empty(Item)
					Delete Next 1 In (Juststem(lcTable))
				Else
					lnItem = m.lnItem + 1
					Replace;
						item With m.lnItem
				Endif
		
			Endscan
		Endif &&!Used(Juststem(m.lcTable))
		
		Select (Juststem(m.lcTable))
		Goto Top
		
	ENDPROC

	PROCEDURE Refresh
		This.UpdateImageIcon()
	ENDPROC

	PROCEDURE savesearchscope
		Lparameters tcSearchScope
		
		Local;
			lcTable           As String,;
			lnExpressionsToStore As Number,;
			lnSelect          As Number
		*:Global;
		tcScope
		
		lnSelect = Select()
		
		If Empty(m.tcSearchScope)
			Return
		Endif
		
		Thisform.SaveDBC_Open()
		
		lcTable = Juststem(This.cTable)
		
		*!*	lcSearchScopeTable = This.cTable
		lnExpressionsToStore = This.nExpressionsToStore
		
		*SF 20221018 -> local storage
		*lcTable = Home(7) + lcSearchScopeTable + '.dbf'
		*!*	lcTable = Thisform.cCR_StoreLocal + lcSearchScopeTable + '.dbf'
		*/SF 20221018 -> local storage
		
		tcScope = Rtrim(Alltrim(m.tcSearchScope), 0, '\')
		
		This.OpenTable()
		
		Locate;
			For Lower(Rtrim(scope, ' ',  '\')) == Lower(Rtrim(m.tcScope, ' ', '\'))
		
		If Found() Then
		    Replace;
		     Item With 0;
		     In (m.lcTable)
		
		Else  &&Found()
			Insert Into (m.lcTable);
				(Item, scope) ;
				Values;
				(0, m.tcSearchScope)
		
		Endif &&FOUND()
		
		Replace All;
		 Item With Item + 1;
		 In (m.lcTable)
		
		Delete;
		 For Item > m.lnExpressionsToStore+1;
		 In (m.lcTable)
		
		Use In Select(m.lcTable)
		Thisform.SaveDBC_Close()
		
		This.LoadRows()
		
	ENDPROC

	PROCEDURE updateimageicon
		Local lcScope, loImage
		
		lcScope = Upper(This.Text)
		loImage = This.parent.imgScopeIcon
		loImage.Visible = .t.
		
		Do Case
		
			Case ".PJX" $ lcScope
				loImage.Picture     = "..\images\gf_project_icon_16.bmp"
		
			Case Empty(lcScope)
				loImage.Picture     = ""
				loImage.Visible     = .f.
				
			Otherwise
				loImage.Picture     = "..\images\gf_folder_icon_16.bmp"
		Endcase
		
		 
		
		 
	ENDPROC

	PROCEDURE Valid
		Local lItemExists
		
		lItemExists = .F. && assume the value isn't in the list.
		lcValue = Alltrim(This.Text)
		lcValue = Rtrim(Lower(lcValue), '\')
		
		If This.Value = This.Tag and !Empty(This.Tag)
			Return .t.
		EndIf
		
		For i = 1 To This.ListCount
			If Lower(This.List(i)) = lcValue
				lItemExists = .T.
				Exit
			Endif
		Endfor
		
		If !lItemExists
			This.AddItem(lcValue)
		Endif
		
		Do Case
		
			Case Empty(lcValue)
				Thisform.Refresh()
				Return
		
			Case lcValue == Lower('<< Active Project >>')
				Thisform.oSearchOptions.nSearchScope = 1
				lcValue = Lower(Thisform.oSearchEngine.GetActiveProject())
				Thisform.oSearchOptions.cProject = lcValue
		
			Case '.PJX' $ Upper(lcValue)
				If !File(lcValue)
					MessageBox('Scope file not found:' + 0h0D0A + '"' + lcValue + '"', 16, 'Error')
					This.Value = lcValue
					Return
				Endif
				Thisform.oSearchOptions.nSearchScope = 2
				Thisform.oSearchOptions.cProject = lcValue
		
			Case lcValue == Lower('<< Current Dir >>')
				Thisform.oSearchOptions.nSearchScope = 3
				lcValue = Alltrim(Lower(Thisform.oSearchEngine.GetCurrentDirectory()), '\')
				Thisform.oSearchOptions.cPath = lcValue
		
			Otherwise
				If !Directory(lcValue, 1)
					MessageBox('Invalid scope directory:' + 0h0D0A + '"' + lcValue + '"', 16, 'Error')
					This.Value = lcValue
					Return
				Endif
				Thisform.oSearchOptions.nSearchScope = 4
				Thisform.oSearchOptions.cPath = lcValue
		
		Endcase
		
		This.SaveSearchScope(lcValue) && Will move this entry to the top of the list
		This.Value = Alltrim(lcValue)
		This.Tag = This.Value
		
		Thisform.Refresh()    
	ENDPROC

ENDDEFINE
