*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="_environ.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
DEFINE CLASS _shellexecute AS _custom OF "_base.vcx" 		&& Opens a file in the application that it's associated with.
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: shellexecute		&& Runs ShellExecute API routine, which is simlar to double-clicking file in explorer.  Parameters: (cFileName, cWorkDir, cOperation, cParams)
	*</DefinedPropArrayMethod>

	*<PropValue>
		Name = "_shellexecute"
	*</PropValue>
	
	PROCEDURE shellexecute		&& Runs ShellExecute API routine, which is simlar to double-clicking file in explorer.  Parameters: (cFileName, cWorkDir, cOperation, cParams)
		* WinApi :: ShellExecute
		**  Function: Opens a file in the application that it's
		**            associated with.
		**      Pass: lcFileName -  Name of the file to open
		**   
		**  Return:   2  - Bad Association (e.g., invalid URL)
		**            31 - No application association
		**            29 - Failure to load application
		**            30 - Application is busy 
		**
		**            Values over 32 indicate success
		**            and return an instance handle for
		**            the application started (the browser) 
		**
		** ShowWindow() Commands
		**  #define SW_HIDE             0
		**  #define SW_SHOWNORMAL       1
		**  #define SW_NORMAL           1
		**  #define SW_SHOWMINIMIZED    2
		**  #define SW_SHOWMAXIMIZED    3
		**  #define SW_MAXIMIZE         3
		**  #define SW_SHOWNOACTIVATE   4
		**  #define SW_SHOW             5
		**  #define SW_MINIMIZE         6
		**  #define SW_SHOWMINNOACTIVE  7
		**  #define SW_SHOWNA           8
		**  #define SW_RESTORE          9
		**  #define SW_SHOWDEFAULT      10
		**  #define SW_FORCEMINIMIZE    11
		**  #define SW_MAX              11
		
		LPARAMETERS tcFileName,tcWorkDir,tcOperation,tnShowWindow
		LOCAL lcFileName,lcWorkDir,lcOperation,lnShowWindow
		
		IF EMPTY(tcFileName)
			RETURN -1
		ENDIF
		
		lcFileName=ALLTRIM(tcFileName)
		lcWorkDir=IIF(TYPE("tcWorkDir")="C",ALLTRIM(tcWorkDir),"")
		lcOperation=IIF(TYPE("tcOperation")="C" AND NOT EMPTY(tcOperation),ALLTRIM(tcOperation),"Open")
		lnShowWindow=IIF(TYPE("tnShowWindow")="N",tnShowWindow,1)
		
		*-* HINSTANCE ShellExecute(hwnd, lpszOp, lpszFile, lpszParams, lpszDir, wShowCmd)
		*-* 
		*-* HWND hwnd - handle of parent window
		*-* LPCTSTR lpszOp - address of string for operation to perform
		*-* LPCTSTR lpszFile - address of string for filename
		*-* LPTSTR lpszParams - address of string for executable-file parameters
		*-* LPCTSTR lpszDir - address of string for default directory
		*-* INT wShowCmd - whether file is shown when opened
		DECLARE INTEGER ShellExecute ;
			    IN SHELL32.DLL ;
			    INTEGER nWinHandle,;
			    STRING cOperation,;   
			    STRING cFileName,;
			    STRING cParameters,;
			    STRING cDirectory,;
			    INTEGER nShowWindow
		RETURN ShellExecute(0,lcOperation,lcFilename,"",lcWorkDir,lnShowWindow)
		
	ENDPROC

ENDDEFINE
