*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="my.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
DEFINE CLASS audio AS mybase OF "my.vcx" 		&& Handles the computer's sound system
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "myconstants.h"
	*<DefinedPropArrayMethod>
		*m: play		&& Plays the specified WAV file
		*m: playsystemsound		&& Plays the specified system sound
	*</DefinedPropArrayMethod>

	*<PropValue>
		cnamespace = My.Computer.Audio
		Name = "audio"
		_memberdata = <VFPData>
			<memberdata name="openmytable" type="method" display="OpenMyTable"/>
			<memberdata name="addmembers" type="method" display="AddMembers"/>
			<memberdata name="cnamespace" type="property" display="cNameSpace"/>
			<memberdata name="playsystemsound" type="method" display="PlaySystemSound"/>
			<memberdata name="play" type="method" display="Play"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE play		&& Plays the specified WAV file
		lparameters SoundFile as String
		#define SND_SYNC       0
		#define SND_ASYNC      1
		#define SND_NODEFAULT  2
		#define SND_LOOP       8
		#define SND_NOSTOP    16
		declare integer sndPlaySound in WinMM.dll string lpszSoundName, integer uFlags
		sndPlaySound(SoundFile, SND_ASYNC)
		
	ENDPROC

	PROCEDURE playsystemsound		&& Plays the specified system sound
		lparameters Sound as String
		local lcSound, ;
			lnSound
		lcSound = iif(vartype(Sound) = 'C', upper(Sound), '')
		do case
			case lcSound = 'QUESTION'
				lnSound = MB_ICONQUESTION
			case lcSound = 'EXCLAMATION'
				lnSound = MB_ICONEXCLAMATION
			case inlist(lcSound, 'INFORMATION', 'ASTERISK')
				lnSound = MB_ICONINFORMATION
			case inlist(lcSound, 'STOP', 'HAND')
				lnSound = MB_ICONSTOP
			otherwise
				lnSound = MB_OK
		endcase
		declare integer MessageBeep in Win32API integer wType
		MessageBeep(lnSound)
		
	ENDPROC

ENDDEFINE
