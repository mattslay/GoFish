*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="my.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
DEFINE CLASS app AS mybase OF "my.vcx" 		&& The Application namespace
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "myconstants.h"
	*<DefinedPropArrayMethod>
		*m: execute		&& Executes the specified file
	*</DefinedPropArrayMethod>

	*<PropValue>
		cnamespace = My.App
		Name = "app"
		_memberdata = <VFPData>
			<memberdata name="openmytable" type="method" display="OpenMyTable"/>
			<memberdata name="addmembers" type="method" display="AddMembers"/>
			<memberdata name="cnamespace" type="property" display="cNameSpace"/>
			<memberdata name="builder" type="property" display="Builder"/>
			<memberdata name="warning" type="method" display="Warning"/>
			<memberdata name="ccaption" type="property" display="cCaption"/>
			<memberdata name="errormessage" type="property" display="ErrorMessage"/>
			<memberdata name="quietmode" type="property" display="QuietMode"/>
			<memberdata name="calledfromthisclass" type="method" display="CalledFromThisClass"/>
			<memberdata name="execute" type="method" display="Execute"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE execute		&& Executes the specified file
		lparameters FileName as String, Operation as String, WorkingFolder as String, ;
			OtherParameters as String
		local lcFileName, ;
			lcWorkDir, ;
			lcOperation, ;
			lcParameters, ;
			lnShow
		if empty(FileName)
			return -1
		endif empty(FileName)
		lcFileName   = alltrim(FileName)
		lcWorkDir    = iif(vartype(WorkingFolder) = 'C', alltrim(WorkingFolder), '')
		lcOperation  = iif(vartype(Operation) = 'C' and not empty(Operation), ;
			alltrim(Operation), 'Open')
		lcParameters = iif(vartype(OtherParameters) = 'C', alltrim(OtherParameters), ;
			'')
		lnShow       = iif(upper(lcOperation) = 'Print', 0, 1)
		declare integer ShellExecute in SHELL32.DLL ;
			integer nWinHandle, ;	&& handle of parent window
			string cOperation, ;	&& operation to perform
			string cFileName, ;		&& filename
			string cParameters, ;	&& parameters for the executable
			string cDirectory, ;	&& default directory
			integer nShowWindow		&& window state
		* Returns:			-1: if no filename was passed
		*					2:  bad association
		*					29: failure to load application
		*					30: application is busy 
		*					31: no application association
		*					Values over 32 indicate success and return an instance
		*						handle for the application
		return ShellExecute(0, lcOperation, lcFilename, lcParameters, lcWorkDir, ;
			lnShow)
		
	ENDPROC

ENDDEFINE
