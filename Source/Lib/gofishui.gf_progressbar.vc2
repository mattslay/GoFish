*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="gofishui.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
DEFINE CLASS gf_progressbar AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="box" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="bar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="bar.Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: nvalue_assign
		*m: reset		&& Resets the Timer control so that it starts counting from 0.
		*m: start
		*m: stop
		*m: update
		*p: csetcursor
		*p: nmaxvalue
		*p: nvalue
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		BorderColor = 0,0,0
		csetcursor = 
		Height = 102
		Name = "gf_progressbar"
		nmaxvalue = 0
		nvalue = 0
		Width = 485
		_memberdata = <VFPData>
			<memberdata name="reset" display="Reset"/>
			<memberdata name="update" display="Update"/>
			<memberdata name="nvalue" display="nValue"/>
			<memberdata name="nmaxvalue" display="nMaxValue"/>
			<memberdata name="nvalue_assign" display="nValue_Assign"/>
			<memberdata name="start" display="Start"/>
			<memberdata name="csetcursor" display="cSetCursor"/>
			<memberdata name="stop" display="Stop"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'bar' AS container WITH ;
		BackColor = 0,64,128, ;
		Height = 23, ;
		Left = 22, ;
		Name = "bar", ;
		Top = 45, ;
		Width = 228
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'bar.Image1' AS image WITH ;
		Height = 50, ;
		Left = 0, ;
		Name = "Image1", ;
		Picture = ..\images\progressbar.bmp, ;
		RotateFlip = 0, ;
		Stretch = 2, ;
		Top = -22, ;
		Width = 1000
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'box' AS container WITH ;
		BackColor = 128,128,128, ;
		BorderColor = 192,192,192, ;
		Height = 30, ;
		Left = 17, ;
		Name = "box", ;
		Top = 41, ;
		Width = 449
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Image1' AS image WITH ;
		Height = 100, ;
		Left = 1, ;
		Name = "Image1", ;
		Picture = ..\images\progressbarbackground.bmp, ;
		Stretch = 2, ;
		Top = 1, ;
		Width = 483
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Label1' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Searching...", ;
		FontSize = 10, ;
		ForeColor = 255,255,255, ;
		Height = 23, ;
		Left = 17, ;
		Name = "Label1", ;
		Top = 8, ;
		Width = 163
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Press ESCAPE to cancel.", ;
		FontSize = 9, ;
		ForeColor = 255,255,255, ;
		Height = 22, ;
		Left = 18, ;
		Name = "Label2", ;
		Top = 79, ;
		Width = 284
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE nvalue_assign
		lparameters tnValue
		
		This.nValue = tnValue
		
		This.Update()
		
	ENDPROC

	PROCEDURE reset		&& Resets the Timer control so that it starts counting from 0.
		This.bar.Width = 0
		This.Refresh()
	ENDPROC

	PROCEDURE start
		Lparameters tnMaxValue
		
		Local lnMaxValue
		
		lnMaxValue = Evl(tnMaxValue, 1)
		
		*This.cSetCursor = Set('Cursor')
		
		*Set Cursor Off
		
		This.nMaxValue = lnMaxValue 
		This.nValue = 0
		This.Visible = .t.
		This.Update()
		
		 
	ENDPROC

	PROCEDURE stop
		Local lcSetCursor
		
		*lcSetCursor = This.cSetCursor
		
		This.Visible = .f.
		
		*Set Cursor &lcSetCursor
	ENDPROC

	PROCEDURE update
		Local lnMaxValue
		
		lnMaxValue = Iif(This.nMaxValue < 0, 1, This.nMaxValue)
		
		This.Bar.Width = Int((This.nValue / lnMaxValue) * This.Box.Width * .97)
		
		If This.Bar.Width > This.Box.Width - 10
			This.Bar.Width = This.Box.Width - 10
		Endif
		
		
		
	ENDPROC

	PROCEDURE bar.Init
		This.Width = 0
	ENDPROC

ENDDEFINE
